apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ocp-provision
spec:
  params:
  - name: issue_body
    description: Issue Body
  - name: issue_user
    description: User Name
  - name: issue_number
    description: Issue Number
  steps:
    - name: ocp-provision
      image: quay.io/openshift/origin-cli:latest
      script: |
        #!/bin/sh
        set -eu -o pipefail

        echo "$(params.issue_body)" > issue_body
        product-groupId=$(grep product-groupId issue_body | awk -F: '{print $NF}' | awk '{gsub(/^\s+|\$s+/, "");print}')

        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd
        argo_route=openshift-gitops-server
        argo_secret=openshift-gitops-cluster
        sa_account=openshift-gitops-argocd-application-controller

        argo_pwd=$(oc get secret ${argo_secret} \
                    -n openshift-gitops \
                    -o jsonpath='{.data.admin\.password}' | base64 -d ; echo ) \
        && argo_url=$(oc get route ${argo_route} \
                      -n openshift-gitops \
                      -o jsonpath='{.spec.host}') \
        && argocd login "${argo_url}" \
              --username admin \
              --password "${argo_pwd}" \
              --insecure

        argocd app create $(params.issue_user)-ocp-provision \
        --sync-policy automatic \
        --project default \
        --repo https://github.com/IBM/cp4waiops-gitops.git \
        --path config/all-in-one \
        --revision release-3.3 \
        --dest-namespace openshift-gitops \
        --dest-server https://kubernetes.default.svc \
        --helm-set cp4waiops.targetRevision=release-3.3 \
        --helm-set argocd.cluster=openshift \
        --helm-set argocd.allowLocalDeploy=false \
        --helm-set rookceph.enabled=false \
        --helm-set cp4waiops.aiManager.enabled=false \
        --helm-set cp4waiops.eventManager.enabled=false \
        --helm-set cluster.enabled=true \
        --helm-set cluster.provider.type=fyre \
        --helm-set cluster.provider.credentials.productGroupId="$product-groupId" \
        --helm-set cluster.provider.credentials.token=REPLACE_IT \
        --helm-set cluster.provider.credentials.user=REPLACE_IT

        while : ; do
          status=$(oc get OpenShiftFyre openshiftfyre-qb-large -n openshift-gitops -o jsonpath={.status.cluster.status}) \
          || {
            echo "OpenShiftFyre has not been created yet."
          }
          if [[ $status != "deployed" ]]; then
            sleep 10s
          else
            break
          fi
        done
